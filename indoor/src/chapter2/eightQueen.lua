---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by houn.
--- DateTime: 2019/4/22 22:21
---This file is to practice eight queen question
---

local N = 8 -- 棋盘的大小 8*8local
local totalResult = 0

local t1 = os.clock()
--检查(n, c) 会不会被攻击
---@param table table
---@param n number @表示行
---@param c number @表示列
---@return boolean
---
local function checkAttack(table, n, c)
    for i = 1, n - 1 do
        if (table[i] == c) or
                (table[i] - i == c - n) or --行列式
                (table[i] + i == c + n) then
            return false
        end
    end
    return true
end

---@param table table
local function printTable(table)
    for i = 1, N do
        for j = 1, N do
            if j == table[i] then
                io.write("O ")
            else
                io.write("X ")
            end
        end
        io.write("\n")
    end
    io.write("\n")
    totalResult = totalResult + 1
end

---@param table table
---@param n number
local function addQueen(table, n)
    if n > N then
        printTable(table)
    else
        for c = 1, N do
            if checkAttack(table, n, c) then
                table[n] = c
                addQueen(table, n + 1)
            end
        end
    end
end

addQueen({}, 1)
print("Total answer1:" .. totalResult)
print("Method1 time:", os.clock() - t1)

totalResult = 0
t1 = os.clock()
---@param t table|number
local function deepCopy(t)
    local result = {}
    if type(t) == "number" then
        table.insert(t, 1, t)
    else
        for i, v in ipairs(t) do
            result[i] = t[i]
        end
    end
    return result
end

---@param table table
---@param n number
---return table
local function insertNumber(t, n)
    local result = {}
    for i = 1, #t + 1 do
        result[i] = deepCopy(t)
        table.insert(result[i], i, n)
    end
    return result
end

---@param t1 table
---@param t2 table
---@return table
local function mergeTable(t1, t2)
    local length = #t1
    for i = 1, #t2 do
        table.insert(t1, length + i, t2[i])
    end
end

---@param table table
---@param n number
---@return table
local function arrangement(t, n)
    local temp = {}
    for i = 1, #t do
        local tt = insertNumber(t[i], n)
        mergeTable(temp, tt)
    end
    return temp
end

local function getArrangement()
    local table = { { 1, 2 }, { 2, 1 } }
    for i = 3, N do
        table = arrangement(table, i)
    end
    return table
end
local tr = getArrangement()
print("Method2 time1:", os.clock() - t1)
for i, v in ipairs(tr) do
    local flag = true
    for j, k in ipairs(v) do
        if not checkAttack(v, j, k) then
            flag = false
            break
        end
    end
    if flag then
        printTable(v)
    end
end
print("Total number:", #tr)
print("Total answer2:" .. totalResult)
print("Method2 time2:", os.clock() - t1)





